import re

def create_password():
    while True:
        password = input("Enter a password: ")

        # Check if password meets criteria
        if (len(password) < 8 or
            not any(char.isdigit() for char in password) or
            not any(char.islower() for char in password) or
            not any(char.isupper() for char in password) or
            not any(char in '!@#$%^&*()-_=+[]{};:\'",.<>/?`~' for char in password)):
            print("Error! Password must be at least 8 characters long and contain "
                  "at least one number, one lowercase letter, one uppercase letter, "
                  "and one special character.")
        else:
            print("Password created successfully!")
            return password

def caesar_cipher(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():  # only shift alphabet characters
            if char.islower():
                encrypted_text += chr((ord(char) - ord('a') + shift) % 26 + ord('a'))
            elif char.isupper():
                encrypted_text += chr((ord(char) - ord('A') + shift) % 26 + ord('A'))
        else:
            encrypted_text += char  # keep non-alphabet characters unchanged
    return encrypted_text

# Create a password
password = create_password()

try:
    shift = int(input("Enter the shift value : "))
except ValueError:
    print("Invalid input. Please enter an integer.")

# Encrypt using Caesar cipher with the chosen shift
encrypted_password = caesar_cipher(password, shift)
print("Encrypted password:", encrypted_password)
